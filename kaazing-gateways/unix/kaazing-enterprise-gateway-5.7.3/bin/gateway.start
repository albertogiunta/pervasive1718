#!/bin/bash
#
# Copyright 2007-2017, Kaazing Corporation. All rights reserved.
#

PRG="$0"

while [ -h "$PRG" ] ; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`

# A temporary variable for the location of the gateway installation,
# to allow determining the conf and lib subdirectories (assumed to 
# be siblings to this script's 'bin' directory).
GW_HOME=`cd "$PRGDIR/.." ; pwd`
SCRIPTED_ARGS=$GW_HOME/lib/enterprise-args.csv

# --------------------------- Broker specific start ---------------------------

# Location of Apache ActiveMQ and Apache QPid brokers.
ACTIVEMQ_HOME=$GW_HOME/brokers/apache-activemq-*
QPID_HOME=$GW_HOME/brokers/qpid-java-broker-*

BROKER=""
ARGS=""

while [[ "$#" > 0 ]]
do
    case $1 in
        --broker)
            USE_BROKER=1
            BROKER="$2"
            shift
            ;;
        *) ARGS+=" $1"
            ;;
    esac
    shift
done

LEN=$(echo ${#BROKER})

function cleanup()
{
    shopt -s nocasematch
    if [[ $LEN -gt 0 ]]
    then
       if [[ $BROKER = "JMS" ]]
       then
          echo "Stopping Apache Active MQ JMS Broker"
          $ACTIVEMQ_HOME/bin/activemq stop
       elif [[ $BROKER = "AMQP" ]]
       then
          echo "Stopping Apache QPid AMQP 0-9-1 Broker"
          $QPID_HOME/bin/qpid.stop
       else
          echo "ERROR: $0: '$BROKER' broker not supported. Valid values for the 'broker' command-line parameter are 'AMQP' and 'JMS'."
       fi
    fi
    shopt -u nocasematch
    exit $?
}

# Trap keyboard interrupt (control-c)
trap cleanup SIGHUP SIGINT SIGTERM

shopt -s nocasematch

if [[ $USE_BROKER -eq 1 ]]
then
   if [[ $BROKER = "JMS" ]]
   then
      echo "Starting Apache Active MQ JMS Broker"
      $ACTIVEMQ_HOME/bin/activemq start
   elif [[ $BROKER = "AMQP" ]]
   then
      echo "Starting Apache QPid AMQP 0-9-1 Broker"
      $QPID_HOME/bin/qpid-server -os &
   else
      echo "ERROR: $0: '$BROKER' broker not supported. Valid values for the 'broker' command-line parameter are 'AMQP' and 'JMS'."
      exit 1
   fi
fi


shopt -u nocasematch

# ---------------------------- Broker specific end ----------------------------

# You can define various Java system properties by setting the value
# of the GATEWAY_OPTS environment variable before calling this script.
# The script itself should not be changed. For example, the setting
# below sets the Java maximum memory to 512MB.
[ -z "$GATEWAY_OPTS" ] && GATEWAY_OPTS="-Xmx512m"

# You can define flags to opt into using early access features by setting the value
# of the GATEWAY_FEATURES environment variable to a comma separated list of features
# to enable before calling this script.
# The script itself should not be changed.
FEATURE_OPTS=""
if [ -n "$GATEWAY_FEATURES" ]
then
   echo "Enabling early access features: " + $GATEWAY_FEATURES  
   set -f; IFS=,
   for feature in $GATEWAY_FEATURES; do
      FEATURE_OPTS="$FEATURE_OPTS -Dfeature.$feature"
   done
   set +f; unset IFS
fi

# Check if Java exists
if [[ -x `type -p java` ]]; then
  _java=java
elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]]; then
  _java="JAVA_HOME/bin/java"
else
  echo "ERROR: Java is not installed. Cannot start the Gateway."
  exit 1
fi

# Check the Java version
if [[ "$_java" ]]; then
 # Does not work when JAVA_OPTIONS is set
 # JAVA_VER=$(java -version 2>&1 | sed 's/.*version "\(.*\)\.\(.*\)\..*"/\1\2/; 1q')
 JAVA_VER=$(java -version 2>&1 | grep -i version | cut -d'"' -f2 | cut -d'.' -f1-2)
  if [[ "$JAVA_VER" < "1.8" ]]; then
    if [ "$(uname)" == "Darwin" ]; then
        echo "ERROR: Kaazing gateway requires Java JRE 8 or higher to run. Note that on Mac OSX installing the JRE does not automatically update your environment or path. See https://java.com/en/download/faq/java_mac.xml#cmdline for more information."        
    else
        echo "ERROR: Kaazing gateway requires Java JRE 8 or higher to run."
    fi
    exit 1
  fi
fi

java $GATEWAY_OPTS $FEATURE_OPTS -Djava.library.path="$JAVA_LIBRARY_PATH" -XX:+HeapDumpOnOutOfMemoryError -cp "$GW_HOME/lib/*:$GW_HOME/lib/ext/*" org.kaazing.gateway.server.Main  $ARGS

